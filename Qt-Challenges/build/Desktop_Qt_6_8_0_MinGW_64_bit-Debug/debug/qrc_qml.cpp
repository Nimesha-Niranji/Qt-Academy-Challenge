/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.8.0
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#ifdef _MSC_VER
// disable informational message "function ... selected for automatic inline expansion"
#pragma warning (disable: 4711)
#endif

static const unsigned char qt_resource_data[] = {
  // main.qml
  0x0,0x0,0x0,0xf5,
  0x0,
  0x0,0x3,0x76,0x78,0xda,0xb5,0x90,0xc1,0x4e,0xc3,0x30,0xc,0x86,0xef,0x95,0xfa,
  0xe,0x56,0x4e,0xc0,0x21,0xda,0xa,0x93,0x50,0x8f,0xbc,0xc1,0x26,0x24,0xce,0x6d,
  0x62,0xb5,0xd6,0xba,0xa4,0x38,0xee,0x76,0x40,0xbc,0x3b,0xeb,0xd2,0xae,0x3,0x71,
  0x28,0x48,0x8d,0x72,0xc8,0xff,0xfb,0x97,0xfd,0xc5,0x74,0x68,0x3d,0xb,0x6c,0x65,
  0xdb,0x91,0xd9,0x43,0xa6,0xd7,0x59,0x9a,0xd0,0x37,0x53,0xbf,0x91,0xb3,0xfe,0x34,
  0xd4,0xd2,0x64,0x90,0x1f,0x69,0x2,0xe7,0x43,0x36,0x7,0xf6,0x5e,0xa2,0x3a,0x91,
  0x95,0x3a,0x87,0xe7,0xcd,0x2a,0xea,0x1a,0xa9,0xaa,0xe5,0xc6,0x38,0x52,0xa0,0xb2,
  0xc1,0x1c,0x84,0x3b,0x8c,0x96,0x90,0xf4,0xc6,0x7b,0x78,0xe5,0x3b,0xf5,0xd2,0x5,
  0x72,0x18,0x2,0x98,0x82,0xad,0xba,0xef,0xe7,0xf5,0x99,0x1d,0x1a,0x29,0x5c,0xd5,
  0xe0,0x38,0xf6,0x3a,0x7a,0x2c,0xac,0x27,0x7f,0x80,0xe8,0xa9,0xf4,0xe5,0xd,0xf,
  0xb0,0xd2,0x9b,0x29,0x30,0x52,0x5d,0x12,0x51,0xfc,0x8c,0x18,0xdf,0x78,0xce,0x41,
  0x31,0x5a,0x35,0x42,0x7c,0xce,0xa7,0xc9,0x96,0xa1,0xa9,0x18,0xd1,0xa9,0xc9,0x2f,
  0x9c,0xa9,0x3d,0x7,0xcd,0xb1,0x43,0x5b,0x30,0x3a,0x89,0xea,0x6,0x7a,0x1e,0xf2,
  0xe3,0x32,0xc8,0x2d,0xb9,0xfd,0x2f,0xc4,0xa5,0x17,0xf1,0x87,0x2b,0x72,0x94,0xff,
  0x58,0xf4,0xd3,0x32,0xd4,0x65,0xd3,0xe1,0xdc,0x3d,0xff,0xf5,0x6b,0xe7,0xfb,0x5,
  0xbc,0x68,0xec,0xd9,
  
};

static const unsigned char qt_resource_name[] = {
  // main.qml
  0x0,0x8,
  0x8,0x1,0x5a,0x5c,
  0x0,0x6d,
  0x0,0x61,0x0,0x69,0x0,0x6e,0x0,0x2e,0x0,0x71,0x0,0x6d,0x0,0x6c,
  
};

static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/main.qml
  0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x96,0x6b,0xdc,0x67,0xeb,

};

#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif

#if defined(QT_INLINE_NAMESPACE)
inline namespace QT_NAMESPACE {
#elif defined(QT_NAMESPACE)
namespace QT_NAMESPACE {
#endif

bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);

#if defined(__ELF__) || defined(__APPLE__)
static inline unsigned char qResourceFeatureZlib()
{
    extern const unsigned char qt_resourceFeatureZlib;
    return qt_resourceFeatureZlib;
}
#else
unsigned char qResourceFeatureZlib();
#endif

#ifdef QT_NAMESPACE
}
#endif

int QT_RCC_MANGLE_NAMESPACE(qInitResources_qml)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_qml)()
{
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qml)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qml)()
{
    int version = 3;
    version += QT_RCC_PREPEND_NAMESPACE(qResourceFeatureZlib());
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif

namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_qml)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qml)(); }
   } dummy;
}

#ifdef __clang__
#   pragma clang diagnostic pop
#endif
